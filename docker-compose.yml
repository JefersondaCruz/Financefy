
services:
  application:
    build:
      context: ./application
      dockerfile: Dockerfile
    container_name: laravel_app
    ports:
      - "8000:8000"
    volumes:
      - ./application:/var/www/html
    depends_on:
      - postgres
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    command: sh -c "php artisan config:clear && php artisan serve --host=0.0.0.0 --port=8000"
    networks:
      - backend_net
      - frontend_net

  chatbot:
    build:
      context: ./chatbot
      dockerfile: Dockerfile
    container_name: chatbot_app
    ports:
      - "8001:8000"
    volumes:
      - ./chatbot:/var/www/html
    depends_on:
      - postgres
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    command: sh -c "php artisan config:clear && php artisan serve --host=0.0.0.0 --port=8001"
    networks:
      - backend_net

  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: laravel
      POSTGRES_DB: laravel
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_net

  vue:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue_app
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - HOST=0.0.0.0
    networks:
      - frontend_net

volumes:
  postgres_data:

networks:
  backend_net:
  frontend_net:
