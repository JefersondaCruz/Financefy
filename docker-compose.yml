
services:
  application:
    build:
      context: ./application
      dockerfile: Dockerfile
    container_name: application_app
    env_file:
      - ./application/.env
    ports:
      - "8000:8000"
    volumes:
      - ./application:/var/www/html
      -  /var/www/html/vendor
    depends_on:
      - postgres
    command: sh -c "composer install && php artisan config:clear && php artisan serve --host=0.0.0.0 --port=8000"
    networks:
      - backend_net
      - frontend_net
    profiles: ["app"]

  chatbot:
    build:
      context: ./chatbot
      dockerfile: Dockerfile
    container_name: chatbot_app
    env_file:
      - ./chatbot/.env
    ports:
      - "8001:8000"
    volumes:
      - ./chatbot:/var/www/html
      - /var/www/html/vendor
    depends_on:
      - postgres
    command: sh -c "composer install && php artisan config:clear && php artisan serve --host=0.0.0.0 --port=8001"
    networks:
      - backend_net
    profiles: ["chatbot"]

  postgres:
    image: postgres:16-alpine 
    container_name: postgres_db
    restart: always
    env_file:
      - ./application/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql
    networks:
      - backend_net

  vue:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue_app
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - HOST=0.0.0.0
    networks:
      - frontend_net
    profiles: ["front"]

volumes:
  postgres_data:

networks:
  backend_net:
  frontend_net:
